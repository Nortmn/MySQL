NULL или NOT NULL задают ограничение на столбец, позволяя присваивать элементам неопределенное значение или, наоборот, запрещая такое поведение.

DEFAULT позволяет задать полю значение по умолчанию, которое будет присваиваться в случае, если при создании записи значение не задано.

UNSIGNED относится только к числовым значениям. Поле с таким атрибутом теряет возможность хранить отрицательные значения. 
	Для многих полей, например, первичного ключа, отрицательные значения не требуются. Под кодирование знака отводится один бит. 
	Отказ от него позволяет его высвободить под кодирование числа и увеличить максимально допустимый диапазон.

===========================================================================================================================================================
Операторы сравнения в SQL:


=	Проверяет, является ли значения двух операндов равны или нет, если да, то условие становится истинным.	(a = b) не соответствует действительности.

!=	Проверяет, является ли значения двух операндов равны или нет, если значения не равны, то условие становится истинным.	(a != b) истинно.

<>	Проверяет, является ли значения двух операндов равны или нет, если значения не равны, то условие становится истинным.	(a <> b) истинно.

>	Проверяет, является ли значение левого операнда больше значения правого операнда, если да, то условие становится истинным.	(a > b) не соответствует действительности.

<	Проверяет, является ли значение левого операнда меньше значения правого операнда, если да, то условие становится истинным.	(a < b) истинно.

> =	Проверяет, является ли значение левого операнда больше или равно значению правого операнда, если да, то условие становится истинным.	(a >= b) неверно.

<=	Проверяет, является ли значение левого операнда меньше или равно значению правого операнда, если да, то условие становится истинным.	(a <= b) истинно.

<!	Проверяет, является ли значение левого операнда не меньше, чем значение правого операнда, если да, то условие становится истинным.	(a! < b) неверно.

!>	Проверяет, является ли значение левого операнда не больше, чем значение правого операнда, если да, то условие становится истинным.	(a! > b) верно.


===========================================================================================================================================================
Логические операторы в SQL:

ALL	Оператор ALL используется для сравнения значения для всех значений в другом наборе значений.

AND	Оператор AND допускает существование нескольких условий в SQL-инструкции WHERE.

ANY	Оператор ANY используется для сравнения любого применимого значения в списке в соответствии с условиями.

BETWEEN	Оператор BETWEEN используется для поиска значений, которые находятся в пределах набора значений, учитывая минимальное значение и максимальное значение.

EXIST	Оператор EXISTS используется для поиска наличия строки в указанной таблице, которая соответствуют определенным критериям.

IN	Оператор IN используется для сравнения значения в списке буквенных значений, которые были определены.

LIKE	Оператор LIKE используется для сравнения аналогичных значений с использованием подстановочных операторов.

NOT	Оператор NOT изменяет значение логического оператора, с которым она используется. Например: NOT EXISTS, NOT BETWEEN, NOT IN и т.д. Это оператор отрицает.

OR	Оператор OR используется для объединения нескольких условий в SQL-инструкции WHERE.

IS NULL	Оператор NULL, используется для сравнения значения со значением NULL.

UNIQUE	Единственный оператор выполняет поиск каждой строки из указанной таблицы для уникальности (без дубликатов).


===========================================================================================================================================================
Арифметические операторы в SQL:


+	Добавление – Добавление значения по обе стороны от оператора	a + b = 30

–	Вычитание – Вычитание правого операнда из левого операнда	а – b = -10

*	Умножение – Умножение значения по обе стороны от оператора	а * б = 200

/	Деление – Делит левый операнд на правый операнда	b / a = 2

%	Модуль – Делит левый операнд на правый операнд и возвращает остаток	b % а = 0



===========================================================================================================================================================
SQL Ключевые слова


ADD			Добавляет столбец в существующую таблицу

ADD CONSTRAINT		Добавляет ограничение после того, как таблица уже создана

ALTER			Добавляет, удаляет или изменяет столбцы в таблице, а также изменяет данные тип столбца в таблице

ALTER COLUMN		Изменяет тип данных столбца в таблице

ALTER TABLE		Добавляет, удаляет или изменяет столбцы в таблице

ALL			Возвращает true, если все значения подзапроса соответствуют состояние

AND			Включает только строки, где оба условия истинны

ANY			Возвращает true, если какое-либо из значений подзапроса соответствует состоянию

AS			Переименовывает столбец или таблицу с помощью псевдонима

ASC			Сортировка результирующего набора в порядке возрастания

BACKUP DATABASE		Создает резервную копию существующей базы данных

BETWEEN			Выбор значений в заданном диапазоне

CASE			Создает различные выходные данные в зависимости от условий

CHECK			Ограничение, ограничивающее значение, которое может быть помещено в колонка

COLUMN			Изменяет тип данных столбца или удаляет столбец в таблице

CONSTRAINT		Добавляет или удаляет ограничение

CREATE			Создает базу данных, индекс, представление, таблицу или процедуру

CREATE DATABASE		Создает новую базу данных SQL

CREATE INDEX		Создает индекс в таблице (позволяет дублировать значения)

CREATE OR REPLACE VIEW	Обновление представления

CREATE TABLE		Создает новую таблицу в базе данных

CREATE PROCEDURE	Создает хранимую процедуру

CREATE UNIQUE INDEX	Создает уникальный индекс в таблице (без повторяющихся значений)

CREATE VIEW		Создает представление на основе результирующего набора инструкции SELECT

DATABASE		Создает или удаляет базу данных SQL

DEFAULT			Ограничение, предоставляющее значение по умолчанию для столбца

DELETE			Удаляет строки из таблицы

DESC			Сортировка результирующего набора в порядке убывания

DISTINCT		Выбирает только отдельные (разные) значения

DROP			Удаляет столбец, ограничение, базу данных, индекс, таблицу или представление

DROP COLUMN		Удаляет столбец в таблице

DROP CONSTRAINT		Удаляет UNIQUE, PRIMARY KEY, FOREIGN KEY, или ограничение CHECK

DROP DATABASE		Удаляет существующую базу данных SQL

DROP DEFAULT		Удаляет ограничение по умолчанию

DROP INDEX		Удаление индекса в таблице

DROP TABLE		Удаляет существующую таблицу в базе данных

DROP VIEW		Удаление представления

EXEC			Выполняет хранимую процедуру

EXISTS			Тесты на наличие любой записи в подзапросе

FOREIGN KEY		Ограничение, которое является ключом, используемым для связывания двух таблиц вместе

FROM			Указывает, из какой таблицы следует выбрать или удалить данные

FULL OUTER JOIN		Возвращает все строки при наличии совпадения в левой или правой таблице

GROUP BY		Группирует результирующий набор (используется с агрегатными функциями: COUNT, MAX, MIN, SUM, AVG)

HAVING			Используется вместо WHERE с агрегатными функциями

IN			Позволяет указать несколько значений в предложении WHERE

INDEX			Создает или удаляет индекс в таблице

INNER JOIN		Возвращает строки, имеющие совпадающие значения в обеих таблицах

INSERT INTO		Вставка новых строк в таблицу

INSERT INTO SELECT	Копирует данные из одной таблицы в другую

IS NULL			Тесты для пустых значений

IS NOT NULL		Тесты для непустых значений

JOIN			Для объединения таблиц

LEFT JOIN		Возвращает все строки из левой таблицы и соответствующие строки из правой таблицы

LIKE			Поиск указанного шаблона в столбце

LIMIT			Задает количество записей, возвращаемых в результирующем наборе

NOT			Включает только строки, в которых условие не является истинным

NOT NULL		Ограничение, которое заставляет столбец не принимать нулевые значения

OR			Включает строки, в которых выполняется любое из условий

ORDER BY		Сортировка результирующего набора в порядке возрастания или убывания

OUTER JOIN		Возвращает все строки при наличии совпадения в левой или правой таблице

PRIMARY KEY		Ограничение, которое однозначно идентифицирует каждую запись в таблице базы данных

PROCEDURE		Хранимая процедура

RIGHT JOIN		Возвращает все строки из правой таблицы и соответствующие строки из левой таблицы

ROWNUM			Задает количество записей, возвращаемых в результирующем наборе

SELECT			Выбор данных из базы данных

SELECT DISTINCT		Выбирает только отдельные (разные) значения

SELECT INTO		Копирует данные из одной таблицы в новую таблицу

SELECT TOP		Задает количество записей, возвращаемых в результирующем наборе

SET			Указывает, какие столбцы и значения должны быть обновлены в таблице

TABLE			Создает таблицу, добавляет, удаляет или изменяет столбцы в таблице, а также удаляет таблицу или данные внутри таблицы

TOP			Задает количество записей, возвращаемых в результирующем наборе

TRUNCATE TABLE		Удаляет данные внутри таблицы, но не саму таблицу

UNION			Объединяет результирующий набор из двух или более операторов SELECT (только отдельные значения)

UNION ALL		Объединяет результирующий набор из двух или более операторов SELECT (позволяет дублировать значения)

UNIQUE			Ограничение, обеспечивающее уникальность всех значений в столбце

UPDATE			Обновление существующих строк в таблице

VALUES			Задает значения инструкции INSERT INTO

VIEW			Создает, обновляет или удаляет представление

WHERE			Фильтрует результирующий набор для включения только тех записей, которые удовлетворяют заданному условию

===========================================================================================================================================================





















































































